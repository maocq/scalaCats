/**
  * Creación de instancias
  */

import cats.syntax.either._

val a = 3.asRight[String] //a: Either[String,Int] = Right(3)

val b = 4.asRight[String] //b: Either[String,Int] = Right(4)

for {
  x <- a
  y <- b
} yield x*x + y*y
// res6: scala.util.Either[String,Int] = Right(25)


/**
  * Ejemplo
  */

def countPositive(nums: List[Int]) =
  nums.foldLeft(0.asRight[String]) { (accumulator, num) =>
    if(num > 0) {
      accumulator.map(_ + 1)
    } else {
      Left("Negative. Stopping!")
    }
  }

countPositive(List(1, 2, 3))
// res7: Either[String,Int] = Right(3)

countPositive(List(1, -2, 3))
// res8: Either[String,Int] = Left(Negative. Stopping!)
